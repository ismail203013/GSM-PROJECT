@page "/login"
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject IToastService ToastService



<div class="about-grid-container"> 
    <div class="about-line">

        <h4 class="login-title">Login</h4>


<EditForm Model="user" OnValidSubmit="UserLogin">
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control" Required />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" Required />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>
</div>


<div>

      <h4 class="login-title">Register</h4>

    <form  @onsubmit="UserReg">
    <div class="form-group">
        <label for="email">Email</label>
        <input id="email" type="email" class="form-control" Required />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</form>


</div>

</div>

@code {


    public User user = new User();

    private async void UserLogin()

    {

        Console.WriteLine("LOGGED IN!!!");
        await LocalStorage.SetItemAsync<string>("username", user.Username);
        await AuthStateProvider.GetAuthenticationStateAsync();
        ToastService.ShowSuccess("You have sucessfully logged in!");
        NavigationManager.NavigateTo("dashboard");
        


    }

    private void UserReg()

    {

        
        ToastService.ShowInfo("An email has been sent, please follow the instructions to complete registration !");
      


    }
}
