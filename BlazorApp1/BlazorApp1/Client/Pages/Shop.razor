@inject ICategoryService CategoryService
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@using Blazored.Typeahead

@page "/shop"

<div class="shop-grid-container">

    <div>
<h3 class="shop-title">Shop</h3>
    </div>
    <div>
<BlazoredTypeahead SearchMethod="@SearchProducts" 
                   TValue="Product"
                   TItem="Product"
                   Value="selectedProduct"
                   ValueChanged="HandleSearch"
                   ValueExpression="@(() => selectedProduct)"
                   placeholder="Search..."
                                             
                                                >
    <SelectedTemplate>
        @context.Title
    </SelectedTemplate>

    <ResultTemplate>
        @context.Title
    </ResultTemplate>

    <NotFoundTemplate>
        Sorry, No Items Where Found.
    </NotFoundTemplate>
</BlazoredTypeahead>
</div>

</div>

<div class="about-grid-container">

    
    @foreach (var category in CategoryService.Categories)
    {
        <div class="shop-items">
        
            <NavLink class="nav-link" href="@category.Url">
                @if(category.Id == 1)
                {
                    <img src="/Images/energy.png" width="150px">

                }
                @if(category.Id == 2)
                {
                    <img src="/Images/usb-c-cable.png" width="150px">

                }
                @if(category.Id == 3)
                {
                    <img src="/Images/phone.png" width="150px">

                }
                @if(category.Id == 5)
                {
                    <img src="/Images/audio.png" width="150px">

                }
                @if(category.Id == 6)
                {
                    <img src="/Images/phoneholder.png" width="150px">

                }
               
                <br/>
             
            @category.Name  
            </NavLink>

        </div>   
        
    }
</div>



@code {

    private Product selectedProduct;


    protected override async Task OnInitializedAsync()
    {
        await  CategoryService.LoadCategories(); //loading all the categories
    }

 private void HandleSearch(Product product)
    {
        if (product == null) return;
        selectedProduct = product;
        NavigationManager.NavigateTo($"product/{selectedProduct.Id}");
    }

    private async Task <IEnumerable<Product>> SearchProducts(string searchText)
    {
        var response = await ProductService.SerachProducts(searchText);
        return response;
    }

   
}
