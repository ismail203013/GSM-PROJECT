@page "/cart"
@inject ICartService CartService 
@inject IToastService ToastService
@inject NavigationManager NavigationManager

@if(!orderPlaced)
{
    



@if (cartItems == null || cartItems.Count <= 0)

{
    <h3 class="home-title">My Cart</h3>

   <div class="cart-center">

    <span > You currently have no items in your cart </span>

     </div>

}
else
{
    <h3 class="home-title">My Cart</h3>

    <div class="cart-grid-container">

        <div>
            <h5 class="font-weight-bold">
                Image
            </h5>
        </div>

        
        <div>
            <h5 class="font-weight-bold">
                Item
            </h5>
        </div>
        
        <div>
            <h5 class="font-weight-bold">
                Quantity
            </h5>
        </div>
        
        <div>
            <h5  class="font-weight-bold" >
                Total
            </h5>
        </div>
        

    </div>

  <div class="cart-grid-container">
         @foreach(var item in cartItems)
        {
           
                <div class="cart-img-wrapper"><img src="@item.Image" class="cart-image"/></div>
                  <div class="cart-name"><h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5> 
                      <button class="btn-delete" @onclick="@(()=> DeleteItem(item))">Delete</button></div>
                 @* <span>@item.EditionName</span><br/>*@
                
          

             <div class="cart-price">
                 <EditForm Model="item" class="counter">
                    <InputNumber id="quantity" @bind-Value="item.Quantity"
                                         style="width: 70px" />
                 </EditForm>
             </div>
            <div class="cart-price">£@(item.Price * item.Quantity)</div>
        
       

        }
    </div>  

     <div class="final-price">
            Total (@cartItems.Count): £@cartItems.Sum(item => item.Price * item.Quantity)
        </div>

    <div style="text-align: center; margin-top: 10px;">
                <button class="btn btn-primary btn-lg" @onclick="PlaceOrder">Place Order</button>
            </div>

    }
}
else
{
   <h3 class="home-title">Thank you for your order!</h3>
    <h4 class="heading">Order Summary:</h4>

    <div class="final-cart-grid-container">

        <div >
            <h5 class="font-weight-bold">
                Image
            </h5>
        </div>

        
        <div>
            <h5 class="font-weight-bold">
                Item
            </h5>
        </div>
        
        <div>
            <h5 class="font-weight-bold">
                Total
            </h5>
        </div>
        

    </div>

  <div class="final-cart-grid-container">
         @foreach(var item in cartItems)
        {
           
                <div class="cart-img-wrapper"><img src="@item.Image" class="cart-image"/></div>
                  <div class="cart-name"><h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5></div>
                
        
            <div class="cart-price">£@(item.Price * item.Quantity)</div>
        
       

        }
    </div>  

     <div class="final-price">
            Total (@cartItems.Count): £@cartItems.Sum(item => item.Price * item.Quantity)
        </div>

    }
    


@code {
    List<CartItem> cartItems = new List<CartItem>();
    bool orderPlaced = false;

    protected override async Task OnInitializedAsync()
    {

        cartItems = await CartService.GetCartItems();
    }

    private async Task DeleteItem(CartItem item)
    {
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems();
    }

    private async void PlaceOrder()

    {

        string checkoutUrl = await CartService.Checkout();
        NavigationManager.NavigateTo(checkoutUrl);
        await CartService.EmptyCart();
      

    }

}
