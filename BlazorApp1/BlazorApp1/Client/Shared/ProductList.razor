@inject IProductService ProductService
@implements IDisposable

<ul class="list-unstyled">
    @foreach (var product in ProductService.Products)
    {
        <li class= "media">
            <div class="media-img-wrapper">
                <a href="/product/@product.Id">
                   <img class="media-img" src="@product.Image" alt="@product.Title" />
                    </a>
            </div>
           <div class="media-body">
               <a href="/product/@product.Id">
                   <h4 class="mb-0"> @product.Title</h4>
               </a>
               <p>@product.Description</p>
                @if (product.OriginalPrice > product.Price)
                {
                    <h6 class="orginal-price">@product.OriginalPrice</h6>
                }
                <h5 class="price">
                    £@product.Price
                </h5>
            </div>
        </li>
    }

</ul>

@code {
    // [Parameter]

    //passing category id 
    // public int? CategoryId { get; set; } = null; 

    protected override void OnInitialized()
    {
        //await  ProductService.LoadProducts(); // loading in the list of products
        ProductService.OnChange += StateHasChanged; //reloads products if any change is made
    }
    public  void Dispose()
    {
        ProductService.OnChange -= StateHasChanged;
    }
}
